//differents premiere methode
ALGORITHM differents
VAR
    set1:ARRAY_OF INTEGER[10];
    set2:ARRAY_OF INTEGER[10];
    hash:HASH_TABLE<INTEGER,INTEGER>;
    i,j:INTEGER;
    sum:INTEGER:=0;
BEGIN
    FOR i FROM 0 TO set1.length-1 DO
        hash.insert(set1[i],1)
    END_FOR

    FOR j FROM 0 TO set2.length-1   DO
        IF(hash.lookup(set2[j])=TRUE) THEN
        hash.insert(set2[j],2)
        ELSE 
        hash.insert(set2[j],1)
    END_FOR
    FOR i FROM 0 TO set1.length-1 DO
        IF (hash.get(set1[i])=1) THEN
            sum:=sum+set1[i]
        END_IF
    END_FOR
    FOR i FROM 0 TO set2.length-1 DO
        IF (hash.get(set2[i])=1) THEN
            sum:=sum+set2[i]
        END_IF
    END_FOR
    Write("somme des elements differents",sum)
END

// Differents deuxieme methode
ALGORITHM differents
VAR
    set1:ARRAY_OF INTEGER[10];
    set2:ARRAY_OF INTEGER[10];
    i,j:INTEGER;
    sum:INTEGER:=0;
    finde : BOOLEAN;
BEGIN
    FOR i FROM 0 TO set1.length-1 DO
        finde := FALSE
        FOR j FROM 0 TO set2.length-1 DO
            IF ((set1[i]=set2[j])=FALSE) THEN
                sum := sum + set1[i]
                BREAK;
            END_IF
        END_FOR
    END_FOR

    FOR i FROM 0 TO set2.length-1 DO
        finde := FALSE
        FOR j FROM 0 TO set1.length-1 DO
            IF ((set2[i]=set1[j])=FALSE) THEN
                sum := sum + set2[i]
                BREAK;
            END_IF
        END_FOR
    END_FOR



// communs premiere methode
ALGORITHM communs
VAR
    set1:ARRAY_OF INTEGER[10];
    set2:ARRAY_OF INTEGER[10];
    hash:HASH_TABLE<INTEGER,INTEGER>;
    i,j:INTEGER;
    sum:INTEGER:=0;
BEGIN
    FOR i FROM 0 TO set1.length-1 DO
        hash.insert(set1[i],1)
    END_FOR

    FOR j FROM 0 TO set2.length-1   DO
        IF(hash.lookup(set2[j])=TRUE) THEN
        hash.insert(set2[j],2)
        ELSE 
        hash.insert(set2[j],1)
    END_FOR
    FOR i FROM 0 TO set1.length-1 DO
        IF (hash.get(set1[i])=2) THEN
            sum:=sum+set1[i]*2
        END_IF
    END_FOR
    Write("somme des elements communs",sum)
END

// communs deuxieme methode
ALGORITHM communs
VAR
    set1:ARRAY_OF INTEGER[10];
    set2:ARRAY_OF INTEGER[10];
    i,j:INTEGER;
    sum:INTEGER:=0;
BEGIN
    FOR i FROM 0 TO set1.length-1 DO
        FOR j FROM 0 TO set2.length-1 DO
            IF (set1[i]=set2[j]) THEN
                sum := sum + set1[i]*2
                BREAK;
            END_IF
        END_FOR
    END_FOR